{
  // Place your snippets for typescript here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "arrow function": {
    "prefix": "arrow",
    "body": ["($1) => { $2 }"],
    "description": "Simple arrow function"
  },
  "console.log": {
    "prefix": "clog",
    "body": ["console.log(`$1`);"],
    "description": "Console.log"
  },

  // Jasmine stuff
  "jasmine it": {
    "prefix": "it",
    "body": ["it('$1', () => { $2 });"],
    "description": "Jasmine it assertion"
  },
  "jasmine it (other shortcut)": {
    "prefix": "itt",
    "body": ["it('$1', () => { $2 });"],
    "description": "Jasmine it assertion"
  },
  "jasmine describe": {
    "prefix": "descr",
    "body": ["describe('$1', () => { $2 });"],
    "description": "Jasmine describe block"
  },
  "jasmine beforeEach": {
    "prefix": "bef",
    "body": ["beforeEach(() => { $1 });"],
    "description": "Jasmine beforeEach"
  },
  "jasmine beforeAll": {
    "prefix": "befall",
    "body": ["beforeAll(() => { $1 });"],
    "description": "Jasmine beforeAll"
  },
  "jasmine afterEach": {
    "prefix": "aft",
    "body": ["afterEach(() => { $1 });"],
    "description": "Jasmine afterEach"
  },
  "jasmine afterAll": {
    "prefix": "aftall",
    "body": ["afterAll(() => { $1 });"],
    "description": "Jasmine afterAll"
  }
}
